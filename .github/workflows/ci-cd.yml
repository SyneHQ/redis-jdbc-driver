name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  MAVEN_OPTS: -Xmx1024m

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up JDK 17
      uses: actions/setup-java@v5
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Run tests
      run: mvn clean test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/

  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up JDK 17
      uses: actions/setup-java@v5
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        
    - name: Extract current version
      id: current-version
      run: |
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"
        
    - name: Calculate next version
      id: next-version
      run: |
        CURRENT_VERSION="${{ steps.current-version.outputs.current-version }}"
        # Extract major, minor, patch
        IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
        
        # Increment patch version
        NEW_PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
        
        echo "next-version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Next version: $NEW_VERSION"
        
    - name: Update version in pom.xml
      run: |
        NEW_VERSION="${{ steps.next-version.outputs.next-version }}"
        mvn versions:set -DnewVersion=$NEW_VERSION
        mvn versions:commit
        
    - name: Build and sign artifacts
      run: |
        mvn clean package verify
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        
    - name: Import GPG key
      run: |
        echo "$GPG_PRIVATE_KEY" | gpg --batch --import
        gpg --list-secret-keys --keyid-format LONG
        
    - name: Publish to Maven Central
      run: |
        mvn deploy
      env:
        MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        
    - name: Create Git tag
      run: |
        NEW_VERSION="${{ steps.next-version.outputs.next-version }}"
        git tag -a "v$NEW_VERSION" -m "Release version $NEW_VERSION"
        git push origin "v$NEW_VERSION"
        
    - name: Commit version bump
      run: |
        NEW_VERSION="${{ steps.next-version.outputs.next-version }}"
        git add pom.xml
        git commit -m "Bump version to $NEW_VERSION [skip ci]"
        git push origin HEAD
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.next-version.outputs.next-version }}
        name: Release v${{ steps.next-version.outputs.next-version }}
        body: |
          ## What's Changed
          - Automated release via GitHub Actions
          - Version bumped to ${{ steps.next-version.outputs.next-version }}
          
          ## Artifacts
          - `redis-jdbc-driver-${{ steps.next-version.outputs.next-version }}.jar`
          - `redis-jdbc-driver-${{ steps.next-version.outputs.next-version }}-sources.jar`
          - `redis-jdbc-driver-${{ steps.next-version.outputs.next-version }}-javadoc.jar`
          
          ## Maven Central
          This release is available on Maven Central:
          ```xml
          <dependency>
              <groupId>com.synehq.jdbc</groupId>
              <artifactId>redis-jdbc-driver</artifactId>
              <version>${{ steps.next-version.outputs.next-version }}</version>
          </dependency>
          ```
        draft: false
        prerelease: false
